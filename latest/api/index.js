Index.PACKAGES = {"com" : [], "com.spotify" : [], "com.spotify.noether" : [{"name" : "com.spotify.noether.AggregatorExample", "shortDescription" : "", "object" : "com\/spotify\/noether\/AggregatorExample$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.spotify.noether.AggregatorExample.main", "link" : "com\/spotify\/noether\/AggregatorExample$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/AggregatorExample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/AggregatorExample$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/AggregatorExample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/AggregatorExample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/AggregatorExample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/AggregatorExample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/AggregatorExample$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AggregatorExample$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AggregatorExample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AggregatorExample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/AggregatorExample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/AggregatorExample$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/noether\/AggregatorExample$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/AggregatorExample$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/AggregatorExample$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/noether\/AggregatorExample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/AggregatorExample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/AggregatorExample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/AggregatorExample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.noether.AUC", "shortDescription" : "Compute the \"Area Under the Curve\" for a collection of predictions.", "members_case class" : [{"label" : "present", "tail" : "(c: MetricCurve): Double", "member" : "com.spotify.noether.AUC.present", "link" : "com\/spotify\/noether\/AUC.html#present(c:com.spotify.noether.MetricCurve):Double", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[MetricCurve]", "member" : "com.spotify.noether.AUC.semigroup", "link" : "com\/spotify\/noether\/AUC.html#semigroup:com.twitter.algebird.Semigroup[com.spotify.noether.MetricCurve]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Boolean, Double]): MetricCurve", "member" : "com.spotify.noether.AUC.prepare", "link" : "com\/spotify\/noether\/AUC.html#prepare(input:com.spotify.noether.Prediction[Boolean,Double]):com.spotify.noether.MetricCurve", "kind" : "def"}, {"member" : "com.spotify.noether.AUC#<init>", "error" : "unsupported entity"}, {"label" : "samples", "tail" : ": Int", "member" : "com.spotify.noether.AUC.samples", "link" : "com\/spotify\/noether\/AUC.html#samples:Int", "kind" : "val"}, {"label" : "metric", "tail" : ": AUCMetric", "member" : "com.spotify.noether.AUC.metric", "link" : "com\/spotify\/noether\/AUC.html#metric:com.spotify.noether.AUCMetric", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Boolean, Double], Option[MetricCurve], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/AUC.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Boolean, Double], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/AUC.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Boolean, Double], A2), (MetricCurve, B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/AUC.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (MetricCurve, B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/AUC.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Boolean, Double]): Aggregator[A1, MetricCurve, Double]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/AUC.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Double) ⇒ D): Aggregator[Prediction[Boolean, Double], MetricCurve, D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/AUC.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: MetricCurve, items: TraversableOnce[Prediction[Boolean, Double]]): MetricCurve", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/AUC.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: MetricCurve, r: Prediction[Boolean, Double]): MetricCurve", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/AUC.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Double, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/AUC.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Boolean, Double]]): Iterator[Double]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/AUC.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): Option[Double]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/AUC.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): Double", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/AUC.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[MetricCurve]): Option[MetricCurve]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/AUC.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[MetricCurve]): MetricCurve", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/AUC.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: MetricCurve, r: MetricCurve): MetricCurve", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/AUC.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/AUC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/AUC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/AUC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/AUC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/AUC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/AUC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/AUC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AUC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AUC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AUC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/AUC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/AUC.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/AUC.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/AUC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/AUC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/AUC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/AUC.html", "kind" : "case class"}, {"name" : "com.spotify.noether.AUCMetric", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/AUCMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/AUCMetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/AUCMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/AUCMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/AUCMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/AUCMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/AUCMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AUCMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AUCMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/AUCMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/AUCMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/AUCMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/noether\/AUCMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/AUCMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/AUCMetric.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/noether\/AUCMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/AUCMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/AUCMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/AUCMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Which function to apply on the list of confusion matrices prior to the AUC calculation.", "trait" : "com\/spotify\/noether\/AUCMetric.html", "kind" : "trait"}, {"name" : "com.spotify.noether.BinaryConfusionMatrix", "shortDescription" : "Special Case for a Binary Confusion Matrix to make it easier to compose with otherbinary aggregators", "members_case class" : [{"label" : "present", "tail" : "(m: Map[(Int, Int), Long]): DenseMatrix[Long]", "member" : "com.spotify.noether.BinaryConfusionMatrix.present", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#present(m:Map[(Int,Int),Long]):breeze.linalg.DenseMatrix[Long]", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[Map[(Int, Int), Long]]", "member" : "com.spotify.noether.BinaryConfusionMatrix.semigroup", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#semigroup:com.twitter.algebird.Semigroup[Map[(Int,Int),Long]]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Boolean, Double]): Map[(Int, Int), Long]", "member" : "com.spotify.noether.BinaryConfusionMatrix.prepare", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#prepare(input:com.spotify.noether.Prediction[Boolean,Double]):Map[(Int,Int),Long]", "kind" : "def"}, {"member" : "com.spotify.noether.BinaryConfusionMatrix#<init>", "error" : "unsupported entity"}, {"label" : "threshold", "tail" : ": Double", "member" : "com.spotify.noether.BinaryConfusionMatrix.threshold", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#threshold:Double", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Boolean, Double], Option[Map[(Int, Int), Long]], Option[DenseMatrix[Long]]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Boolean, Double], Option[DenseMatrix[Long]]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Boolean, Double], A2), (Map[(Int, Int), Long], B2), (DenseMatrix[Long], C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (Map[(Int, Int), Long], B2), (DenseMatrix[Long], C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Boolean, Double]): Aggregator[A1, Map[(Int, Int), Long], DenseMatrix[Long]]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (DenseMatrix[Long]) ⇒ D): Aggregator[Prediction[Boolean, Double], Map[(Int, Int), Long], D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: Map[(Int, Int), Long], items: TraversableOnce[Prediction[Boolean, Double]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: Map[(Int, Int), Long], r: Prediction[Boolean, Double]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, DenseMatrix[Long], Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Boolean, Double]]): Iterator[DenseMatrix[Long]]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): Option[DenseMatrix[Long]]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): DenseMatrix[Long]", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Option[Map[(Int, Int), Long]]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: Map[(Int, Int), Long], r: Map[(Int, Int), Long]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/BinaryConfusionMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/BinaryConfusionMatrix.html", "kind" : "case class"}, {"name" : "com.spotify.noether.CalibrationHistogram", "shortDescription" : "Split predictions into Tensorflow Model Analysis compatible CalibrationHistogramBucket buckets.", "members_case class" : [{"label" : "present", "tail" : "(m: Map[Double, (Double, Double, Long)]): List[CalibrationHistogramBucket]", "member" : "com.spotify.noether.CalibrationHistogram.present", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#present(m:Map[Double,(Double,Double,Long)]):List[com.spotify.noether.CalibrationHistogramBucket]", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[Map[Double, (Double, Double, Long)]]", "member" : "com.spotify.noether.CalibrationHistogram.semigroup", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#semigroup:com.twitter.algebird.Semigroup[Map[Double,(Double,Double,Long)]]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Double, Double]): Map[Double, (Double, Double, Long)]", "member" : "com.spotify.noether.CalibrationHistogram.prepare", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#prepare(input:com.spotify.noether.Prediction[Double,Double]):Map[Double,(Double,Double,Long)]", "kind" : "def"}, {"label" : "bucketSize", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogram.bucketSize", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#bucketSize:Double", "kind" : "val"}, {"member" : "com.spotify.noether.CalibrationHistogram#<init>", "error" : "unsupported entity"}, {"label" : "numBuckets", "tail" : ": Int", "member" : "com.spotify.noether.CalibrationHistogram.numBuckets", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#numBuckets:Int", "kind" : "val"}, {"label" : "upperBound", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogram.upperBound", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#upperBound:Double", "kind" : "val"}, {"label" : "lowerBound", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogram.lowerBound", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#lowerBound:Double", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Double, Double], Option[Map[Double, (Double, Double, Long)]], Option[List[CalibrationHistogramBucket]]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Double, Double], Option[List[CalibrationHistogramBucket]]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Double, Double], A2), (Map[Double, (Double, Double, Long)], B2), (List[CalibrationHistogramBucket], C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (Map[Double, (Double, Double, Long)], B2), (List[CalibrationHistogramBucket], C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Double, Double]): Aggregator[A1, Map[Double, (Double, Double, Long)], List[CalibrationHistogramBucket]]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (List[CalibrationHistogramBucket]) ⇒ D): Aggregator[Prediction[Double, Double], Map[Double, (Double, Double, Long)], D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: Map[Double, (Double, Double, Long)], items: TraversableOnce[Prediction[Double, Double]]): Map[Double, (Double, Double, Long)]", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: Map[Double, (Double, Double, Long)], r: Prediction[Double, Double]): Map[Double, (Double, Double, Long)]", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, List[CalibrationHistogramBucket], Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Double, Double]]): Iterator[List[CalibrationHistogramBucket]]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Double, Double]]): Option[List[CalibrationHistogramBucket]]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Double, Double]]): List[CalibrationHistogramBucket]", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[Map[Double, (Double, Double, Long)]]): Option[Map[Double, (Double, Double, Long)]]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[Map[Double, (Double, Double, Long)]]): Map[Double, (Double, Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: Map[Double, (Double, Double, Long)], r: Map[Double, (Double, Double, Long)]): Map[Double, (Double, Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/CalibrationHistogram.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/CalibrationHistogram.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/CalibrationHistogram.html", "kind" : "case class"}, {"name" : "com.spotify.noether.CalibrationHistogramBucket", "shortDescription" : "Histogram bucket.", "members_case class" : [{"member" : "com.spotify.noether.CalibrationHistogramBucket#<init>", "error" : "unsupported entity"}, {"label" : "sumPredictions", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogramBucket.sumPredictions", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#sumPredictions:Double", "kind" : "val"}, {"label" : "sumLabels", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogramBucket.sumLabels", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#sumLabels:Double", "kind" : "val"}, {"label" : "numPredictions", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogramBucket.numPredictions", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#numPredictions:Double", "kind" : "val"}, {"label" : "upperThresholdExclusive", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogramBucket.upperThresholdExclusive", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#upperThresholdExclusive:Double", "kind" : "val"}, {"label" : "lowerThresholdInclusive", "tail" : ": Double", "member" : "com.spotify.noether.CalibrationHistogramBucket.lowerThresholdInclusive", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#lowerThresholdInclusive:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/CalibrationHistogramBucket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/CalibrationHistogramBucket.html", "kind" : "case class"}, {"name" : "com.spotify.noether.ClassificationReport", "shortDescription" : "Generate a Classification Report for a collection of binary predictions.", "members_case class" : [{"label" : "present", "tail" : "(m: Map[(Int, Int), Long]): Report", "member" : "com.spotify.noether.ClassificationReport.present", "link" : "com\/spotify\/noether\/ClassificationReport.html#present(m:Map[(Int,Int),Long]):com.spotify.noether.Report", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[Map[(Int, Int), Long]]", "member" : "com.spotify.noether.ClassificationReport.semigroup", "link" : "com\/spotify\/noether\/ClassificationReport.html#semigroup:com.twitter.algebird.Semigroup[Map[(Int,Int),Long]]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Boolean, Double]): Map[(Int, Int), Long]", "member" : "com.spotify.noether.ClassificationReport.prepare", "link" : "com\/spotify\/noether\/ClassificationReport.html#prepare(input:com.spotify.noether.Prediction[Boolean,Double]):Map[(Int,Int),Long]", "kind" : "def"}, {"member" : "com.spotify.noether.ClassificationReport#<init>", "error" : "unsupported entity"}, {"label" : "beta", "tail" : ": Double", "member" : "com.spotify.noether.ClassificationReport.beta", "link" : "com\/spotify\/noether\/ClassificationReport.html#beta:Double", "kind" : "val"}, {"label" : "threshold", "tail" : ": Double", "member" : "com.spotify.noether.ClassificationReport.threshold", "link" : "com\/spotify\/noether\/ClassificationReport.html#threshold:Double", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Boolean, Double], Option[Map[(Int, Int), Long]], Option[Report]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/ClassificationReport.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Boolean, Double], Option[Report]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/ClassificationReport.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Boolean, Double], A2), (Map[(Int, Int), Long], B2), (Report, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/ClassificationReport.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (Map[(Int, Int), Long], B2), (Report, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/ClassificationReport.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Boolean, Double]): Aggregator[A1, Map[(Int, Int), Long], Report]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/ClassificationReport.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Report) ⇒ D): Aggregator[Prediction[Boolean, Double], Map[(Int, Int), Long], D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/ClassificationReport.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: Map[(Int, Int), Long], items: TraversableOnce[Prediction[Boolean, Double]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/ClassificationReport.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: Map[(Int, Int), Long], r: Prediction[Boolean, Double]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/ClassificationReport.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Report, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/ClassificationReport.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Boolean, Double]]): Iterator[Report]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/ClassificationReport.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): Option[Report]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/ClassificationReport.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): Report", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/ClassificationReport.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Option[Map[(Int, Int), Long]]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/ClassificationReport.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/ClassificationReport.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: Map[(Int, Int), Long], r: Map[(Int, Int), Long]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/ClassificationReport.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/ClassificationReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/ClassificationReport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/ClassificationReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/ClassificationReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/ClassificationReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/ClassificationReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/ClassificationReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ClassificationReport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ClassificationReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ClassificationReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/ClassificationReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/ClassificationReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/ClassificationReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/ClassificationReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/ClassificationReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/ClassificationReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/ClassificationReport.html", "kind" : "case class"}, {"name" : "com.spotify.noether.ConfusionMatrix", "shortDescription" : "Generic Consfusion Matrix Aggregator for any dimension.", "members_case class" : [{"label" : "present", "tail" : "(m: Map[(Int, Int), Long]): DenseMatrix[Long]", "member" : "com.spotify.noether.ConfusionMatrix.present", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#present(m:Map[(Int,Int),Long]):breeze.linalg.DenseMatrix[Long]", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[Map[(Int, Int), Long]]", "member" : "com.spotify.noether.ConfusionMatrix.semigroup", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#semigroup:com.twitter.algebird.Semigroup[Map[(Int,Int),Long]]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Int, Int]): Map[(Int, Int), Long]", "member" : "com.spotify.noether.ConfusionMatrix.prepare", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#prepare(input:com.spotify.noether.Prediction[Int,Int]):Map[(Int,Int),Long]", "kind" : "def"}, {"member" : "com.spotify.noether.ConfusionMatrix#<init>", "error" : "unsupported entity"}, {"label" : "labels", "tail" : ": Seq[Int]", "member" : "com.spotify.noether.ConfusionMatrix.labels", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#labels:Seq[Int]", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Int, Int], Option[Map[(Int, Int), Long]], Option[DenseMatrix[Long]]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Int, Int], Option[DenseMatrix[Long]]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Int, Int], A2), (Map[(Int, Int), Long], B2), (DenseMatrix[Long], C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (Map[(Int, Int), Long], B2), (DenseMatrix[Long], C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Int, Int]): Aggregator[A1, Map[(Int, Int), Long], DenseMatrix[Long]]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (DenseMatrix[Long]) ⇒ D): Aggregator[Prediction[Int, Int], Map[(Int, Int), Long], D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: Map[(Int, Int), Long], items: TraversableOnce[Prediction[Int, Int]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: Map[(Int, Int), Long], r: Prediction[Int, Int]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, DenseMatrix[Long], Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Int, Int]]): Iterator[DenseMatrix[Long]]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Int, Int]]): Option[DenseMatrix[Long]]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Int, Int]]): DenseMatrix[Long]", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Option[Map[(Int, Int), Long]]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: Map[(Int, Int), Long], r: Map[(Int, Int), Long]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/ConfusionMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/ConfusionMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/ConfusionMatrix.html", "kind" : "case class"}, {"name" : "com.spotify.noether.Curve", "shortDescription" : "Compute a series of points for a collection of predictions.", "members_case class" : [{"label" : "present", "tail" : "(c: MetricCurve): MetricCurvePoints", "member" : "com.spotify.noether.Curve.present", "link" : "com\/spotify\/noether\/Curve.html#present(c:com.spotify.noether.MetricCurve):com.spotify.noether.MetricCurvePoints", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[MetricCurve]", "member" : "com.spotify.noether.Curve.semigroup", "link" : "com\/spotify\/noether\/Curve.html#semigroup:com.twitter.algebird.Semigroup[com.spotify.noether.MetricCurve]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Boolean, Double]): MetricCurve", "member" : "com.spotify.noether.Curve.prepare", "link" : "com\/spotify\/noether\/Curve.html#prepare(input:com.spotify.noether.Prediction[Boolean,Double]):com.spotify.noether.MetricCurve", "kind" : "def"}, {"member" : "com.spotify.noether.Curve#<init>", "error" : "unsupported entity"}, {"label" : "samples", "tail" : ": Int", "member" : "com.spotify.noether.Curve.samples", "link" : "com\/spotify\/noether\/Curve.html#samples:Int", "kind" : "val"}, {"label" : "metric", "tail" : ": AUCMetric", "member" : "com.spotify.noether.Curve.metric", "link" : "com\/spotify\/noether\/Curve.html#metric:com.spotify.noether.AUCMetric", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Boolean, Double], Option[MetricCurve], Option[MetricCurvePoints]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/Curve.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Boolean, Double], Option[MetricCurvePoints]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/Curve.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Boolean, Double], A2), (MetricCurve, B2), (MetricCurvePoints, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/Curve.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (MetricCurve, B2), (MetricCurvePoints, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/Curve.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Boolean, Double]): Aggregator[A1, MetricCurve, MetricCurvePoints]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/Curve.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (MetricCurvePoints) ⇒ D): Aggregator[Prediction[Boolean, Double], MetricCurve, D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/Curve.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: MetricCurve, items: TraversableOnce[Prediction[Boolean, Double]]): MetricCurve", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/Curve.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: MetricCurve, r: Prediction[Boolean, Double]): MetricCurve", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/Curve.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, MetricCurvePoints, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/Curve.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Boolean, Double]]): Iterator[MetricCurvePoints]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/Curve.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): Option[MetricCurvePoints]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/Curve.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Boolean, Double]]): MetricCurvePoints", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/Curve.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[MetricCurve]): Option[MetricCurve]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/Curve.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[MetricCurve]): MetricCurve", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/Curve.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: MetricCurve, r: MetricCurve): MetricCurve", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/Curve.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/Curve.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/Curve.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/Curve.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/Curve.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/Curve.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/Curve.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/Curve.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Curve.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Curve.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Curve.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/Curve.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/Curve.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/Curve.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/Curve.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/Curve.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/Curve.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/Curve.html", "kind" : "case class"}, {"name" : "com.spotify.noether.ErrorRateSummary", "shortDescription" : "Measurement of what percentage of values were predicted incorrectly.", "object" : "com\/spotify\/noether\/ErrorRateSummary$.html", "members_object" : [{"label" : "present", "tail" : "(score: (Double, Long)): Double", "member" : "com.spotify.noether.ErrorRateSummary.present", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#present(score:(Double,Long)):Double", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[(Double, Long)]", "member" : "com.spotify.noether.ErrorRateSummary.semigroup", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#semigroup:com.twitter.algebird.Semigroup[(Double,Long)]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Int, List[Double]]): (Double, Long)", "member" : "com.spotify.noether.ErrorRateSummary.prepare", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#prepare(input:com.spotify.noether.Prediction[Int,List[Double]]):(Double,Long)", "kind" : "def"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Int, List[Double]], Option[(Double, Long)], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Int, List[Double]], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Int, List[Double]], A2), ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Int, List[Double]]): Aggregator[A1, (Double, Long), Double]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Double) ⇒ D): Aggregator[Prediction[Int, List[Double]], (Double, Long), D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: (Double, Long), items: TraversableOnce[Prediction[Int, List[Double]]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: (Double, Long), r: Prediction[Int, List[Double]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Double, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Int, List[Double]]]): Iterator[Double]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Int, List[Double]]]): Option[Double]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Int, List[Double]]]): Double", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[(Double, Long)]): Option[(Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[(Double, Long)]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: (Double, Long), r: (Double, Long)): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/ErrorRateSummary$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.noether.LogLoss", "shortDescription" : "LogLoss of the predictions.", "object" : "com\/spotify\/noether\/LogLoss$.html", "members_object" : [{"label" : "present", "tail" : "(score: (Double, Long)): Double", "member" : "com.spotify.noether.LogLoss.present", "link" : "com\/spotify\/noether\/LogLoss$.html#present(score:(Double,Long)):Double", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[(Double, Long)]", "member" : "com.spotify.noether.LogLoss.semigroup", "link" : "com\/spotify\/noether\/LogLoss$.html#semigroup:com.twitter.algebird.Semigroup[(Double,Long)]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Int, List[Double]]): (Double, Long)", "member" : "com.spotify.noether.LogLoss.prepare", "link" : "com\/spotify\/noether\/LogLoss$.html#prepare(input:com.spotify.noether.Prediction[Int,List[Double]]):(Double,Long)", "kind" : "def"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Int, List[Double]], Option[(Double, Long)], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/LogLoss$.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Int, List[Double]], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/LogLoss$.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Int, List[Double]], A2), ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/LogLoss$.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/LogLoss$.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Int, List[Double]]): Aggregator[A1, (Double, Long), Double]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/LogLoss$.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Double) ⇒ D): Aggregator[Prediction[Int, List[Double]], (Double, Long), D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/LogLoss$.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: (Double, Long), items: TraversableOnce[Prediction[Int, List[Double]]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/LogLoss$.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: (Double, Long), r: Prediction[Int, List[Double]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/LogLoss$.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Double, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/LogLoss$.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Int, List[Double]]]): Iterator[Double]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/LogLoss$.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Int, List[Double]]]): Option[Double]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/LogLoss$.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Int, List[Double]]]): Double", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/LogLoss$.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[(Double, Long)]): Option[(Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/LogLoss$.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[(Double, Long)]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/LogLoss$.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: (Double, Long), r: (Double, Long)): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/LogLoss$.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/LogLoss$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/LogLoss$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/LogLoss$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/LogLoss$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/LogLoss$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/LogLoss$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/LogLoss$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/LogLoss$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/LogLoss$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/LogLoss$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/LogLoss$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/LogLoss$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/LogLoss$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/LogLoss$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/LogLoss$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/LogLoss$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/LogLoss$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.noether.MeanAveragePrecision", "shortDescription" : "Returns the mean average precision (MAP) of all the predictions.", "members_case class" : [{"label" : "present", "tail" : "(score: (Double, Long)): Double", "member" : "com.spotify.noether.MeanAveragePrecision.present", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#present(score:(Double,Long)):Double", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[(Double, Long)]", "member" : "com.spotify.noether.MeanAveragePrecision.semigroup", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#semigroup:com.twitter.algebird.Semigroup[(Double,Long)]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: RankingPrediction[T]): (Double, Long)", "member" : "com.spotify.noether.MeanAveragePrecision.prepare", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#prepare(input:com.spotify.noether.RankingPrediction[T]):(Double,Long)", "kind" : "def"}, {"member" : "com.spotify.noether.MeanAveragePrecision#<init>", "error" : "unsupported entity"}, {"label" : "lift", "tail" : "(): MonoidAggregator[RankingPrediction[T], Option[(Double, Long)], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[RankingPrediction[T], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(RankingPrediction[T], A2), ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ RankingPrediction[T]): Aggregator[A1, (Double, Long), Double]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Double) ⇒ D): Aggregator[RankingPrediction[T], (Double, Long), D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: (Double, Long), items: TraversableOnce[RankingPrediction[T]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: (Double, Long), r: RankingPrediction[T]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Double, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[RankingPrediction[T]]): Iterator[Double]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[RankingPrediction[T]]): Option[Double]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[RankingPrediction[T]]): Double", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[(Double, Long)]): Option[(Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[(Double, Long)]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: (Double, Long), r: (Double, Long)): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/MeanAveragePrecision.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/MeanAveragePrecision.html", "kind" : "case class"}, {"name" : "com.spotify.noether.MetricCurve", "shortDescription" : "", "members_case class" : [{"member" : "com.spotify.noether.MetricCurve#<init>", "error" : "unsupported entity"}, {"label" : "cm", "tail" : ": Array[Map[(Int, Int), Long]]", "member" : "com.spotify.noether.MetricCurve.cm", "link" : "com\/spotify\/noether\/MetricCurve.html#cm:Array[Map[(Int,Int),Long]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/MetricCurve.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/MetricCurve.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/MetricCurve.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/MetricCurve.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/MetricCurve.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/MetricCurve.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/MetricCurve.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurve.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurve.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurve.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/MetricCurve.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/MetricCurve.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/MetricCurve.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/MetricCurve.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/MetricCurve.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/MetricCurve.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/MetricCurve.html", "kind" : "case class"}, {"name" : "com.spotify.noether.MetricCurvePoint", "shortDescription" : "", "members_case class" : [{"member" : "com.spotify.noether.MetricCurvePoint#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Double", "member" : "com.spotify.noether.MetricCurvePoint.y", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#y:Double", "kind" : "val"}, {"label" : "x", "tail" : ": Double", "member" : "com.spotify.noether.MetricCurvePoint.x", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#x:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/MetricCurvePoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/MetricCurvePoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/MetricCurvePoint.html", "kind" : "case class"}, {"name" : "com.spotify.noether.MetricCurvePoints", "shortDescription" : "", "members_case class" : [{"member" : "com.spotify.noether.MetricCurvePoints#<init>", "error" : "unsupported entity"}, {"label" : "points", "tail" : ": Array[MetricCurvePoint]", "member" : "com.spotify.noether.MetricCurvePoints.points", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#points:Array[com.spotify.noether.MetricCurvePoint]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/MetricCurvePoints.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/MetricCurvePoints.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/MetricCurvePoints.html", "kind" : "case class"}, {"name" : "com.spotify.noether.MultiClassificationReport", "shortDescription" : "Generate a Classification Report for a collection of multiclass predictions.", "members_case class" : [{"label" : "present", "tail" : "(m: Map[(Int, Int), Long]): Map[Int, Report]", "member" : "com.spotify.noether.MultiClassificationReport.present", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#present(m:Map[(Int,Int),Long]):Map[Int,com.spotify.noether.Report]", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[Map[(Int, Int), Long]]", "member" : "com.spotify.noether.MultiClassificationReport.semigroup", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#semigroup:com.twitter.algebird.Semigroup[Map[(Int,Int),Long]]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: Prediction[Int, Int]): Map[(Int, Int), Long]", "member" : "com.spotify.noether.MultiClassificationReport.prepare", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#prepare(input:com.spotify.noether.Prediction[Int,Int]):Map[(Int,Int),Long]", "kind" : "def"}, {"member" : "com.spotify.noether.MultiClassificationReport#<init>", "error" : "unsupported entity"}, {"label" : "beta", "tail" : ": Double", "member" : "com.spotify.noether.MultiClassificationReport.beta", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#beta:Double", "kind" : "val"}, {"label" : "labels", "tail" : ": Seq[Int]", "member" : "com.spotify.noether.MultiClassificationReport.labels", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#labels:Seq[Int]", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[Prediction[Int, Int], Option[Map[(Int, Int), Long]], Option[Map[Int, Report]]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[Prediction[Int, Int], Option[Map[Int, Report]]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(Prediction[Int, Int], A2), (Map[(Int, Int), Long], B2), (Map[Int, Report], C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, (Map[(Int, Int), Long], B2), (Map[Int, Report], C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ Prediction[Int, Int]): Aggregator[A1, Map[(Int, Int), Long], Map[Int, Report]]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Map[Int, Report]) ⇒ D): Aggregator[Prediction[Int, Int], Map[(Int, Int), Long], D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: Map[(Int, Int), Long], items: TraversableOnce[Prediction[Int, Int]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: Map[(Int, Int), Long], r: Prediction[Int, Int]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Map[Int, Report], Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[Prediction[Int, Int]]): Iterator[Map[Int, Report]]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[Prediction[Int, Int]]): Option[Map[Int, Report]]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[Prediction[Int, Int]]): Map[Int, Report]", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Option[Map[(Int, Int), Long]]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[Map[(Int, Int), Long]]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: Map[(Int, Int), Long], r: Map[(Int, Int), Long]): Map[(Int, Int), Long]", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/MultiClassificationReport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/MultiClassificationReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/MultiClassificationReport.html", "kind" : "case class"}, {"name" : "com.spotify.noether.NdcgAtK", "shortDescription" : "Compute the average NDCG value of all the predictions, truncated at ranking position k.", "members_case class" : [{"label" : "present", "tail" : "(score: (Double, Long)): Double", "member" : "com.spotify.noether.NdcgAtK.present", "link" : "com\/spotify\/noether\/NdcgAtK.html#present(score:(Double,Long)):Double", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[(Double, Long)]", "member" : "com.spotify.noether.NdcgAtK.semigroup", "link" : "com\/spotify\/noether\/NdcgAtK.html#semigroup:com.twitter.algebird.Semigroup[(Double,Long)]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: RankingPrediction[T]): (Double, Long)", "member" : "com.spotify.noether.NdcgAtK.prepare", "link" : "com\/spotify\/noether\/NdcgAtK.html#prepare(input:com.spotify.noether.RankingPrediction[T]):(Double,Long)", "kind" : "def"}, {"member" : "com.spotify.noether.NdcgAtK#<init>", "error" : "unsupported entity"}, {"label" : "k", "tail" : ": Int", "member" : "com.spotify.noether.NdcgAtK.k", "link" : "com\/spotify\/noether\/NdcgAtK.html#k:Int", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[RankingPrediction[T], Option[(Double, Long)], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/NdcgAtK.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[RankingPrediction[T], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/NdcgAtK.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(RankingPrediction[T], A2), ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/NdcgAtK.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/NdcgAtK.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ RankingPrediction[T]): Aggregator[A1, (Double, Long), Double]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/NdcgAtK.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Double) ⇒ D): Aggregator[RankingPrediction[T], (Double, Long), D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/NdcgAtK.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: (Double, Long), items: TraversableOnce[RankingPrediction[T]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/NdcgAtK.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: (Double, Long), r: RankingPrediction[T]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/NdcgAtK.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Double, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/NdcgAtK.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[RankingPrediction[T]]): Iterator[Double]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/NdcgAtK.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[RankingPrediction[T]]): Option[Double]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/NdcgAtK.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[RankingPrediction[T]]): Double", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/NdcgAtK.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[(Double, Long)]): Option[(Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/NdcgAtK.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[(Double, Long)]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/NdcgAtK.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: (Double, Long), r: (Double, Long)): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/NdcgAtK.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/NdcgAtK.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/NdcgAtK.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/NdcgAtK.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/NdcgAtK.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/NdcgAtK.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/NdcgAtK.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/NdcgAtK.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/NdcgAtK.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/NdcgAtK.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/NdcgAtK.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/NdcgAtK.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/NdcgAtK.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/NdcgAtK.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/NdcgAtK.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/NdcgAtK.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/NdcgAtK.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/NdcgAtK.html", "kind" : "case class"}, {"name" : "com.spotify.noether.PR", "shortDescription" : "  Precision Recall Curve", "object" : "com\/spotify\/noether\/PR$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/PR$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/PR$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/PR$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/PR$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/PR$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/PR$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/PR$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/PR$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/PR$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/PR$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/PR$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/PR$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/PR$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/PR$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/PR$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/PR$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/PR$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.spotify.noether.PrecisionAtK", "shortDescription" : "Compute the average precision of all the predictions, truncated at ranking position k.", "members_case class" : [{"label" : "present", "tail" : "(score: (Double, Long)): Double", "member" : "com.spotify.noether.PrecisionAtK.present", "link" : "com\/spotify\/noether\/PrecisionAtK.html#present(score:(Double,Long)):Double", "kind" : "def"}, {"label" : "semigroup", "tail" : "(): Semigroup[(Double, Long)]", "member" : "com.spotify.noether.PrecisionAtK.semigroup", "link" : "com\/spotify\/noether\/PrecisionAtK.html#semigroup:com.twitter.algebird.Semigroup[(Double,Long)]", "kind" : "def"}, {"label" : "prepare", "tail" : "(input: RankingPrediction[T]): (Double, Long)", "member" : "com.spotify.noether.PrecisionAtK.prepare", "link" : "com\/spotify\/noether\/PrecisionAtK.html#prepare(input:com.spotify.noether.RankingPrediction[T]):(Double,Long)", "kind" : "def"}, {"member" : "com.spotify.noether.PrecisionAtK#<init>", "error" : "unsupported entity"}, {"label" : "k", "tail" : ": Int", "member" : "com.spotify.noether.PrecisionAtK.k", "link" : "com\/spotify\/noether\/PrecisionAtK.html#k:Int", "kind" : "val"}, {"label" : "lift", "tail" : "(): MonoidAggregator[RankingPrediction[T], Option[(Double, Long)], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.lift", "link" : "com\/spotify\/noether\/PrecisionAtK.html#lift:com.twitter.algebird.MonoidAggregator[A,Option[B],Option[C]]", "kind" : "def"}, {"label" : "toFold", "tail" : "(): Fold[RankingPrediction[T], Option[Double]]", "member" : "com.twitter.algebird.Aggregator.toFold", "link" : "com\/spotify\/noether\/PrecisionAtK.html#toFold:com.twitter.algebird.Fold[A,Option[C]]", "kind" : "def"}, {"label" : "zip", "tail" : "(ag2: Aggregator[A2, B2, C2]): Aggregator[(RankingPrediction[T], A2), ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.zip", "link" : "com\/spotify\/noether\/PrecisionAtK.html#zip[A2,B2,C2](ag2:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[(A,A2),(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "join", "tail" : "(that: Aggregator[A2, B2, C2]): Aggregator[A2, ((Double, Long), B2), (Double, C2)]", "member" : "com.twitter.algebird.Aggregator.join", "link" : "com\/spotify\/noether\/PrecisionAtK.html#join[A2<:A,B2,C2](that:com.twitter.algebird.Aggregator[A2,B2,C2]):com.twitter.algebird.Aggregator[A2,(B,B2),(C,C2)]", "kind" : "def"}, {"label" : "composePrepare", "tail" : "(prepare2: (A1) ⇒ RankingPrediction[T]): Aggregator[A1, (Double, Long), Double]", "member" : "com.twitter.algebird.Aggregator.composePrepare", "link" : "com\/spotify\/noether\/PrecisionAtK.html#composePrepare[A1](prepare2:A1=>A):com.twitter.algebird.Aggregator[A1,B,C]", "kind" : "def"}, {"label" : "andThenPresent", "tail" : "(present2: (Double) ⇒ D): Aggregator[RankingPrediction[T], (Double, Long), D]", "member" : "com.twitter.algebird.Aggregator.andThenPresent", "link" : "com\/spotify\/noether\/PrecisionAtK.html#andThenPresent[D](present2:C=>D):com.twitter.algebird.Aggregator[A,B,D]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(old: (Double, Long), items: TraversableOnce[RankingPrediction[T]]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.appendAll", "link" : "com\/spotify\/noether\/PrecisionAtK.html#appendAll(old:B,items:TraversableOnce[A]):B", "kind" : "def"}, {"label" : "append", "tail" : "(l: (Double, Long), r: RankingPrediction[T]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.append", "link" : "com\/spotify\/noether\/PrecisionAtK.html#append(l:B,r:A):B", "kind" : "def"}, {"label" : "applyCumulatively", "tail" : "(inputs: In)(bf: CanBuildFrom[In, Double, Out]): Out", "member" : "com.twitter.algebird.Aggregator.applyCumulatively", "link" : "com\/spotify\/noether\/PrecisionAtK.html#applyCumulatively[In<:TraversableOnce[A],Out](inputs:In)(implicitbf:scala.collection.generic.CanBuildFrom[In,C,Out]):Out", "kind" : "def"}, {"label" : "cumulativeIterator", "tail" : "(inputs: Iterator[RankingPrediction[T]]): Iterator[Double]", "member" : "com.twitter.algebird.Aggregator.cumulativeIterator", "link" : "com\/spotify\/noether\/PrecisionAtK.html#cumulativeIterator(inputs:Iterator[A]):Iterator[C]", "kind" : "def"}, {"label" : "applyOption", "tail" : "(inputs: TraversableOnce[RankingPrediction[T]]): Option[Double]", "member" : "com.twitter.algebird.Aggregator.applyOption", "link" : "com\/spotify\/noether\/PrecisionAtK.html#applyOption(inputs:TraversableOnce[A]):Option[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(inputs: TraversableOnce[RankingPrediction[T]]): Double", "member" : "com.twitter.algebird.Aggregator.apply", "link" : "com\/spotify\/noether\/PrecisionAtK.html#apply(inputs:TraversableOnce[A]):C", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(items: TraversableOnce[(Double, Long)]): Option[(Double, Long)]", "member" : "com.twitter.algebird.Aggregator.reduceOption", "link" : "com\/spotify\/noether\/PrecisionAtK.html#reduceOption(items:TraversableOnce[B]):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(items: TraversableOnce[(Double, Long)]): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/PrecisionAtK.html#reduce(items:TraversableOnce[B]):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(l: (Double, Long), r: (Double, Long)): (Double, Long)", "member" : "com.twitter.algebird.Aggregator.reduce", "link" : "com\/spotify\/noether\/PrecisionAtK.html#reduce(l:B,r:B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/PrecisionAtK.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/PrecisionAtK.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/PrecisionAtK.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/PrecisionAtK.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/PrecisionAtK.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/PrecisionAtK.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/PrecisionAtK.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/PrecisionAtK.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/PrecisionAtK.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/PrecisionAtK.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/PrecisionAtK.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/PrecisionAtK.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/PrecisionAtK.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/PrecisionAtK.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/PrecisionAtK.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/PrecisionAtK.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/PrecisionAtK.html", "kind" : "case class"}, {"name" : "com.spotify.noether.Prediction", "shortDescription" : "Generic Prediction Object used by most aggregators", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.spotify.noether.Prediction.toString", "link" : "com\/spotify\/noether\/Prediction.html#toString():String", "kind" : "def"}, {"member" : "com.spotify.noether.Prediction#<init>", "error" : "unsupported entity"}, {"label" : "predicted", "tail" : ": S", "member" : "com.spotify.noether.Prediction.predicted", "link" : "com\/spotify\/noether\/Prediction.html#predicted:S", "kind" : "val"}, {"label" : "actual", "tail" : ": L", "member" : "com.spotify.noether.Prediction.actual", "link" : "com\/spotify\/noether\/Prediction.html#actual:L", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/Prediction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/Prediction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/Prediction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/Prediction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/Prediction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/Prediction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/Prediction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Prediction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Prediction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Prediction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/Prediction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/Prediction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/Prediction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/Prediction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/Prediction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/Prediction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/Prediction.html", "kind" : "case class"}, {"name" : "com.spotify.noether.Report", "shortDescription" : "Classification Report", "members_case class" : [{"member" : "com.spotify.noether.Report#<init>", "error" : "unsupported entity"}, {"label" : "fpr", "tail" : ": Double", "member" : "com.spotify.noether.Report.fpr", "link" : "com\/spotify\/noether\/Report.html#fpr:Double", "kind" : "val"}, {"label" : "accuracy", "tail" : ": Double", "member" : "com.spotify.noether.Report.accuracy", "link" : "com\/spotify\/noether\/Report.html#accuracy:Double", "kind" : "val"}, {"label" : "recall", "tail" : ": Double", "member" : "com.spotify.noether.Report.recall", "link" : "com\/spotify\/noether\/Report.html#recall:Double", "kind" : "val"}, {"label" : "precision", "tail" : ": Double", "member" : "com.spotify.noether.Report.precision", "link" : "com\/spotify\/noether\/Report.html#precision:Double", "kind" : "val"}, {"label" : "fscore", "tail" : ": Double", "member" : "com.spotify.noether.Report.fscore", "link" : "com\/spotify\/noether\/Report.html#fscore:Double", "kind" : "val"}, {"label" : "mcc", "tail" : ": Double", "member" : "com.spotify.noether.Report.mcc", "link" : "com\/spotify\/noether\/Report.html#mcc:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/Report.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/Report.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/Report.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/Report.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/Report.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/Report.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/Report.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Report.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Report.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/Report.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/Report.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/Report.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/Report.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/Report.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/Report.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/Report.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/spotify\/noether\/Report.html", "kind" : "case class"}, {"name" : "com.spotify.noether.ROC", "shortDescription" : "  Receiver operating characteristic Curve", "object" : "com\/spotify\/noether\/ROC$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/ROC$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/ROC$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/ROC$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/ROC$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/ROC$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/ROC$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/ROC$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ROC$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ROC$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/ROC$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/ROC$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/ROC$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/ROC$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/ROC$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/ROC$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/ROC$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/ROC$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.spotify.noether.benchmark" : [{"name" : "com.spotify.noether.benchmark.CalibrationHistogramCreateBenchmark", "shortDescription" : "", "object" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html", "members_class" : [{"label" : "createCalibrationHistogram", "tail" : "(calibrationHistogramState: CalibrationHistogramState): Double", "member" : "com.spotify.noether.benchmark.CalibrationHistogramCreateBenchmark.createCalibrationHistogram", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#createCalibrationHistogram(calibrationHistogramState:com.spotify.noether.benchmark.CalibrationHistogramCreateBenchmark.CalibrationHistogramState):Double", "kind" : "def"}, {"member" : "com.spotify.noether.benchmark.CalibrationHistogramCreateBenchmark#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "CalibrationHistogramState", "tail" : "", "member" : "com.spotify.noether.benchmark.CalibrationHistogramCreateBenchmark.CalibrationHistogramState", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#CalibrationHistogramStateextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/spotify\/noether\/benchmark\/CalibrationHistogramCreateBenchmark.html", "kind" : "object"}, {"name" : "com.spotify.noether.benchmark.PredictionUtils", "shortDescription" : "", "object" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html", "members_object" : [{"label" : "generatePredictions", "tail" : "(nbPrediction: Int): Seq[Prediction[Boolean, Double]]", "member" : "com.spotify.noether.benchmark.PredictionUtils.generatePredictions", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#generatePredictions(nbPrediction:Int):Seq[com.spotify.noether.Prediction[Boolean,Double]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/spotify\/noether\/benchmark\/PredictionUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};